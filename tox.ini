[tox]
envlist =
    # lint,
    # update-readme,
    build,
    py310,
    py37,
    py38,
    py39

[testenv]
basepython =
    {clean,build,report,codecov,lint}: {env:TOXPYTHON:python3}
parallel_show_output=true
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    # Compatible with "tox --parallel" to avoid concurrency
    # COVERAGE_FILE={toxinidir}/.coverage_{envname}
    COVERAGE_CONTEXT={envname}
passenv =
    *
deps = -r{toxinidir}/test-requirements.txt
usedevelop = true
commands =
    {posargs:pytest -s --cov --cov-report=term-missing -vv}

[testenv:update-readme]
basepython = {env:TOXPYTHON:python3.10}
setenv =
    {[testenv]setenv}
    BUILD_README=true
usedevelop = true
commands =
    {posargs:pytest -svvk test_build_docstring}
deps =
    {[testenv]deps}

[testenv:lint]
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure --color=always

[testenv:build]
skip_install = true
commands =
    python -m build --sdist --wheel --outdir dist_wo_pbr/
    python -c "import shutil;shutil.rmtree('dist/', ignore_errors=True)"
    python -m build --no-isolation --sdist --wheel --outdir dist/  # Generate ChangeLog with pbr
    python -m twine check --strict dist/*
    bump2version patch --allow-dirty --no-commit --no-tag --dry-run --verbose

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    # Workaround https://github.com/tox-dev/tox/issues/1571
    python -c 'from glob import glob; import subprocess; [subprocess.check_call(["coverage", "combine", "--keep", i]) for i in glob(".coverage_*")]'
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py37]
basepython = {env:TOXPYTHON:python3.7}

[testenv:py38]
basepython = {env:TOXPYTHON:python3.8}

[testenv:py39]
basepython = {env:TOXPYTHON:python3.9}

[testenv:py310]
basepython = {env:TOXPYTHON:python3.10}
